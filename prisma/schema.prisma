// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id                 String    @id @default(uuid())
  name               String
  email              String
  password           String
  address            String?
  stripe_customer_id String?
  createdAt          DateTime? @default(now())
  updatedAt          DateTime? @default(now())

  subscriptions Subscription? // One to many

  haircuts Haircut[] // Many to many

  services Service[]

  @@map("users")
}

model Subscription {
  id        String    @id
  status    String
  price_id  String
  createdAt DateTime? @default(now())
  updatedAt DateTime? @default(now())
  user_id   String    @unique

  user User @relation(fields: [user_id], references: [id]) // relation with user model

  @@map("subscriptions")
}

model Haircut {
  id        String    @id @default(uuid())
  name      String
  price     Int
  status    Boolean   @default(true)
  createdAt DateTime? @default(now())
  updatedAt DateTime? @default(now())

  user_id String

  user User @relation(fields: [user_id], references: [id]) // relation with user model

  service Service[]

  @@map("haircuts")
}

model Service {
  id       String @id @default(uuid())
  customer String

  haircut Haircut @relation(fields: [haircut_id], references: [id])

  haircut_id String

  user_id String

  user User @relation(fields: [user_id], references: [id])

  @@map("services")
}
